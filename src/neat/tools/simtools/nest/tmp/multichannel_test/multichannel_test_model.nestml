
neuron multichannel_test_model:

    parameters:

        # parameters h
        gbar_h real = 0.00
        e_h real = -43.00

        # parameters TestChannel2
        gbar_TestChannel2 real = 0.00
        e_TestChannel2 real = -23.00

        # parameters TestChannel
        gbar_TestChannel real = 0.00
        e_TestChannel real = -23.00

        # parameters SKv3_1
        gbar_SKv3_1 real = 0.00
        e_SKv3_1 real = -85.00

        # parameters SK_E2
        gbar_SK_E2 real = 0.00
        e_SK_E2 real = -85.00

        # parameters SK
        gbar_SK real = 0.00
        e_SK real = -85.00

        # parameters PiecewiseChannel
        gbar_PiecewiseChannel real = 0.00
        e_PiecewiseChannel real = -28.00

        # parameters Na_Ta
        gbar_Na_Ta real = 0.00
        e_Na_Ta real = 50.00

        # parameters NaTa_t
        gbar_NaTa_t real = 0.00
        e_NaTa_t real = 50.00

        # parameters Kv3_1
        gbar_Kv3_1 real = 0.00
        e_Kv3_1 real = -85.00

        # parameters Ca_LVAst
        gbar_Ca_LVAst real = 0.00
        e_Ca_LVAst real = 50.00

        # parameters Ca_HVA
        gbar_Ca_HVA real = 0.00
        e_Ca_HVA real = 50.00

        
        e_AMPA real = 0 mV            
        tau_r_AMPA real = 0.2 ms      
        tau_d_AMPA real = 3.0 ms      

        e_GABA real = -80. mV            
        tau_r_GABA real = 0.2 ms      
        tau_d_GABA real = 10.0 ms      

        e_NMDA real = 0 mV            
        tau_r_NMDA real = 0.2 ms      
        tau_d_NMDA real = 43.0 ms      

        e_AN_AMPA real = 0 mV            
        tau_r_AN_AMPA real = 0.2 ms      
        tau_d_AN_AMPA real = 3.0 ms      
        e_AN_NMDA real = 0 mV            
        tau_r_AN_NMDA real = 0.2 ms      
        tau_d_AN_NMDA real = 43.0 ms     
        NMDA_ratio real = 2.0      



        gamma_ca real = 1e-15
        tau_ca real = 100.0 ms
        inf_ca real = 0.0001



    state:

        # state variables h
        hf_h real = 0.26894142
        hs_h real = 0.26894142

        # state variables TestChannel2
        a00_TestChannel2 real = 0.30000000
        a01_TestChannel2 real = 0.50000000
        a10_TestChannel2 real = 0.40000000
        a11_TestChannel2 real = 0.60000000

        # state variables TestChannel
        a00_TestChannel real = 0.74077490
        a01_TestChannel real = 0.25922510
        a02_TestChannel real = -10.00000000
        a10_TestChannel real = 1.48154980
        a11_TestChannel real = 0.51845020
        a12_TestChannel real = -30.00000000

        # state variables SKv3_1
        z_SKv3_1 real = 0.00006379

        # state variables SK_E2
        z_SK_E2 real = 0.00090982

        # state variables SK
        z_SK real = 0.00090982

        # state variables PiecewiseChannel
        a_PiecewiseChannel real = 0.10000000
        b_PiecewiseChannel real = 0.80000000

        # state variables Na_Ta
        h_Na_Ta real = 0.81757448
        m_Na_Ta real = 0.00307019

        # state variables NaTa_t
        h_NaTa_t real = 0.81757448
        m_NaTa_t real = 0.00307019

        # state variables Kv3_1
        m_Kv3_1 real = 0.00006379

        # state variables Ca_LVAst
        h_Ca_LVAst real = 0.08756384
        m_Ca_LVAst real = 0.00291975

        # state variables Ca_HVA
        h_Ca_HVA real = 0.69823671
        m_Ca_HVA real = 0.00000918

        v_comp real = 0.00000000


        c_ca real = 0.0001



    equations:

        # equation h
        inline i_h real = gbar_h * (0.8*hf_h + 0.2*hs_h) * (e_h - v_comp) @mechanism::channel
        hf_h' = ( hf_inf_h( v_comp ) - hf_h ) / ( tau_hf_h( v_comp ) * 1s )
        hs_h' = ( hs_inf_h( v_comp ) - hs_h ) / ( tau_hs_h( v_comp ) * 1s )


        # equation TestChannel2
        inline i_TestChannel2 real = gbar_TestChannel2 * (0.9*a00_TestChannel2**3*a01_TestChannel2**2 + 0.1*a10_TestChannel2**2*a11_TestChannel2) * (e_TestChannel2 - v_comp) @mechanism::channel
        a00_TestChannel2' = ( a00_inf_TestChannel2( v_comp ) - a00_TestChannel2 ) / ( tau_a00_TestChannel2( v_comp ) * 1s )
        a01_TestChannel2' = ( a01_inf_TestChannel2( v_comp ) - a01_TestChannel2 ) / ( tau_a01_TestChannel2( v_comp ) * 1s )
        a10_TestChannel2' = ( a10_inf_TestChannel2( v_comp ) - a10_TestChannel2 ) / ( tau_a10_TestChannel2( v_comp ) * 1s )
        a11_TestChannel2' = ( a11_inf_TestChannel2( v_comp ) - a11_TestChannel2 ) / ( tau_a11_TestChannel2( v_comp ) * 1s )


        # equation TestChannel
        inline i_TestChannel real = gbar_TestChannel * (5*a00_TestChannel**3*a01_TestChannel**3*a02_TestChannel + a10_TestChannel**2*a11_TestChannel**2*a12_TestChannel) * (e_TestChannel - v_comp) @mechanism::channel
        a00_TestChannel' = ( a00_inf_TestChannel( v_comp ) - a00_TestChannel ) / ( tau_a00_TestChannel( v_comp ) * 1s )
        a01_TestChannel' = ( a01_inf_TestChannel( v_comp ) - a01_TestChannel ) / ( tau_a01_TestChannel( v_comp ) * 1s )
        a02_TestChannel' = ( a02_inf_TestChannel( v_comp ) - a02_TestChannel ) / ( tau_a02_TestChannel( v_comp ) * 1s )
        a10_TestChannel' = ( a10_inf_TestChannel( v_comp ) - a10_TestChannel ) / ( tau_a10_TestChannel( v_comp ) * 1s )
        a11_TestChannel' = ( a11_inf_TestChannel( v_comp ) - a11_TestChannel ) / ( tau_a11_TestChannel( v_comp ) * 1s )
        a12_TestChannel' = ( a12_inf_TestChannel( v_comp ) - a12_TestChannel ) / ( tau_a12_TestChannel( v_comp ) * 1s )


        # equation SKv3_1
        inline i_SKv3_1 real = gbar_SKv3_1 * (z_SKv3_1) * (e_SKv3_1 - v_comp) @mechanism::channel
        z_SKv3_1' = ( z_inf_SKv3_1( v_comp ) - z_SKv3_1 ) / ( tau_z_SKv3_1( v_comp ) * 1s )


        # equation SK_E2
        inline i_SK_E2 real = gbar_SK_E2 * (z_SK_E2) * (e_SK_E2 - v_comp) @mechanism::channel
        z_SK_E2' = ( z_inf_SK_E2( v_comp, c_ca ) - z_SK_E2 ) / ( tau_z_SK_E2( v_comp, c_ca ) * 1s )


        # equation SK
        inline i_SK real = gbar_SK * (z_SK) * (e_SK - v_comp) @mechanism::channel
        z_SK' = ( z_inf_SK( v_comp, c_ca ) - z_SK ) / ( tau_z_SK( v_comp, c_ca ) * 1s )


        # equation PiecewiseChannel
        inline i_PiecewiseChannel real = gbar_PiecewiseChannel * (a_PiecewiseChannel + b_PiecewiseChannel) * (e_PiecewiseChannel - v_comp) @mechanism::channel
        a_PiecewiseChannel' = ( a_inf_PiecewiseChannel( v_comp ) - a_PiecewiseChannel ) / ( tau_a_PiecewiseChannel( v_comp ) * 1s )
        b_PiecewiseChannel' = ( b_inf_PiecewiseChannel( v_comp ) - b_PiecewiseChannel ) / ( tau_b_PiecewiseChannel( v_comp ) * 1s )


        # equation Na_Ta
        inline i_Na_Ta real = gbar_Na_Ta * (h_Na_Ta*m_Na_Ta**3) * (e_Na_Ta - v_comp) @mechanism::channel
        h_Na_Ta' = ( h_inf_Na_Ta( v_comp ) - h_Na_Ta ) / ( tau_h_Na_Ta( v_comp ) * 1s )
        m_Na_Ta' = ( m_inf_Na_Ta( v_comp ) - m_Na_Ta ) / ( tau_m_Na_Ta( v_comp ) * 1s )


        # equation NaTa_t
        inline i_NaTa_t real = gbar_NaTa_t * (h_NaTa_t*m_NaTa_t**3) * (e_NaTa_t - v_comp) @mechanism::channel
        h_NaTa_t' = ( h_inf_NaTa_t( v_comp ) - h_NaTa_t ) / ( tau_h_NaTa_t( v_comp ) * 1s )
        m_NaTa_t' = ( m_inf_NaTa_t( v_comp ) - m_NaTa_t ) / ( tau_m_NaTa_t( v_comp ) * 1s )


        # equation Kv3_1
        inline i_Kv3_1 real = gbar_Kv3_1 * (m_Kv3_1) * (e_Kv3_1 - v_comp) @mechanism::channel
        m_Kv3_1' = ( m_inf_Kv3_1( v_comp ) - m_Kv3_1 ) / ( tau_m_Kv3_1( v_comp ) * 1s )


        # equation Ca_LVAst
        inline i_Ca_LVAst real = gbar_Ca_LVAst * (h_Ca_LVAst*m_Ca_LVAst**2) * (e_Ca_LVAst - v_comp) @mechanism::channel
        h_Ca_LVAst' = ( h_inf_Ca_LVAst( v_comp ) - h_Ca_LVAst ) / ( tau_h_Ca_LVAst( v_comp ) * 1s )
        m_Ca_LVAst' = ( m_inf_Ca_LVAst( v_comp ) - m_Ca_LVAst ) / ( tau_m_Ca_LVAst( v_comp ) * 1s )


        # equation Ca_HVA
        inline i_Ca_HVA real = gbar_Ca_HVA * (h_Ca_HVA*m_Ca_HVA**2) * (e_Ca_HVA - v_comp) @mechanism::channel
        h_Ca_HVA' = ( h_inf_Ca_HVA( v_comp ) - h_Ca_HVA ) / ( tau_h_Ca_HVA( v_comp ) * 1s )
        m_Ca_HVA' = ( m_inf_Ca_HVA( v_comp ) - m_Ca_HVA ) / ( tau_m_Ca_HVA( v_comp ) * 1s )


        kernel g_AMPA = g_norm_AMPA * ( - exp(-t / tau_r_AMPA) + exp(-t / tau_d_AMPA) )
        inline i_AMPA real = convolve(g_AMPA, spikes_AMPA) * (e_AMPA - v_comp) @mechanism::receptor

        kernel g_GABA = g_norm_GABA * ( - exp(-t / tau_r_GABA) + exp(-t / tau_d_GABA) )
        inline i_GABA real = convolve(g_GABA, spikes_GABA) * (e_GABA - v_comp ) @mechanism::receptor

        kernel g_NMDA = g_norm_NMDA * ( - exp(-t / tau_r_NMDA) + exp(-t / tau_d_NMDA) )
        inline i_NMDA real = convolve(g_NMDA, spikes_NMDA) * (e_NMDA - v_comp ) / (1. + 0.3 * exp( -.1 * v_comp )) @mechanism::receptor

        kernel g_AN_AMPA = g_norm_AN_AMPA * ( - exp(-t / tau_r_AN_AMPA) + exp(-t / tau_d_AN_AMPA) )
        kernel g_AN_NMDA = g_norm_AN_NMDA * ( - exp(-t / tau_r_AN_NMDA) + exp(-t / tau_d_AN_NMDA) )
        inline i_AMPA_NMDA real = convolve(g_AN_AMPA, spikes_AN) * (e_AN_AMPA - v_comp) + NMDA_ratio * \
                                convolve(g_AN_NMDA, spikes_AN) * (e_AN_NMDA - v_comp) / (1. + 0.3 * exp( -.1 * v_comp )) @mechanism::receptor



        c_ca' = (inf_ca - c_ca) / (tau_ca * 1s) + gamma_ca * (i_Ca_HVA + i_Ca_LVAst) @mechanism::concentration



    # functions h
    function hf_inf_h (v_comp real) real:
        val real
        val = 1.0/(122306.53009058601*exp(0.14285714285714299*v_comp) + 1.0)
        return val


    function tau_hf_h (v_comp real) real:
        val real
        val = 40.0
        return val

    function hs_inf_h (v_comp real) real:
        val real
        val = 1.0/(122306.53009058601*exp(0.14285714285714299*v_comp) + 1.0)
        return val


    function tau_hs_h (v_comp real) real:
        val real
        val = 300.0
        return val


    # functions TestChannel2
    function a00_inf_TestChannel2 (v_comp real) real:
        val real
        val = 0.29999999999999999
        return val


    function tau_a00_TestChannel2 (v_comp real) real:
        val real
        val = 1.0
        return val

    function a01_inf_TestChannel2 (v_comp real) real:
        val real
        val = 0.5
        return val


    function tau_a01_TestChannel2 (v_comp real) real:
        val real
        val = 2.0
        return val

    function a10_inf_TestChannel2 (v_comp real) real:
        val real
        val = 0.40000000000000002
        return val


    function tau_a10_TestChannel2 (v_comp real) real:
        val real
        val = 2.0
        return val

    function a11_inf_TestChannel2 (v_comp real) real:
        val real
        val = 0.59999999999999998
        return val


    function tau_a11_TestChannel2 (v_comp real) real:
        val real
        val = 2.0
        return val


    # functions TestChannel
    function a00_inf_TestChannel (v_comp real) real:
        val real
        val = 1.0/(0.74081822068171799*exp(0.01*v_comp) + 1.0)
        return val


    function tau_a00_TestChannel (v_comp real) real:
        val real
        val = 1.0
        return val

    function a01_inf_TestChannel (v_comp real) real:
        val real
        val = 1.0*exp(0.01*v_comp)/(1.0*exp(0.01*v_comp) + 1.3498588075760001)
        return val


    function tau_a01_TestChannel (v_comp real) real:
        val real
        val = 2.0
        return val

    function a02_inf_TestChannel (v_comp real) real:
        val real
        val = -10.0
        return val


    function tau_a02_TestChannel (v_comp real) real:
        val real
        val = 1.0
        return val

    function a10_inf_TestChannel (v_comp real) real:
        val real
        val = 2.0/(0.74081822068171799*exp(0.01*v_comp) + 1.0)
        return val


    function tau_a10_TestChannel (v_comp real) real:
        val real
        val = 2.0
        return val

    function a11_inf_TestChannel (v_comp real) real:
        val real
        val = 2.0*exp(0.01*v_comp)/(1.0*exp(0.01*v_comp) + 1.3498588075760001)
        return val


    function tau_a11_TestChannel (v_comp real) real:
        val real
        val = 2.0
        return val

    function a12_inf_TestChannel (v_comp real) real:
        val real
        val = -30.0
        return val


    function tau_a12_TestChannel (v_comp real) real:
        val real
        val = 3.0
        return val


    # functions SKv3_1
    function z_inf_SKv3_1 (v_comp real) real:
        val real
        val = exp(0.10309278350515499*v_comp)/(exp(0.10309278350515499*v_comp) + 6.8746109409659999)
        return val


    function tau_z_SKv3_1 (v_comp real) real:
        val real
        val = 4.0*exp(0.0226551880380607*v_comp)/(exp(0.0226551880380607*v_comp) + 0.348253173014273)
        return val


    # functions SK_E2
    function z_inf_SK_E2 (v_comp real, ca real) real:
        val real
        if ca > 1e-07:
            val = 1.0/(6.92864941342586e-17*pow(1.0/ca, 4.7999999999999998) + 1.0)
        else:
            val = 1.0/(6.92864941342586e-17*pow(1.0/(ca + 9.9999999999999995e-8), 4.7999999999999998) + 1.0)
        return val


    function tau_z_SK_E2 (v_comp real, ca real) real:
        val real
        val = 1.0
        return val


    # functions SK
    function z_inf_SK (v_comp real, ca real) real:
        val real
        val = 1.0/(6.92864941342586e-17*pow(1.0/ca, 4.7999999999999998) + 1.0)
        return val


    function tau_z_SK (v_comp real, ca real) real:
        val real
        val = 1.0
        return val


    # functions PiecewiseChannel
    function a_inf_PiecewiseChannel (v_comp real) real:
        val real
        if v_comp < -50.0:
            val = 0.10000000000000001
        else:
            val = 0.90000000000000002
        return val


    function tau_a_PiecewiseChannel (v_comp real) real:
        val real
        if v_comp < -50.0:
            val = 10.0
        else:
            val = 20.0
        return val

    function b_inf_PiecewiseChannel (v_comp real) real:
        val real
        if v_comp < -50.0:
            val = 0.80000000000000004
        else:
            val = 0.20000000000000001
        return val


    function tau_b_PiecewiseChannel (v_comp real) real:
        val real
        if v_comp < -50.0:
            val = 0.10000000000000001
        else:
            val = 50.0
        return val


    # functions Na_Ta
    function h_inf_Na_Ta (v_comp real) real:
        val real
        val = (0.014999999999999999*v_comp*exp(0.16666666666666699*v_comp) - 2.5052551185368499e-7*v_comp + 0.98999999999999999*exp(0.16666666666666699*v_comp) - 1.6534683782343201e-5)/(898.11212572796705*v_comp*exp(0.33333333333333298*v_comp) - 2.5052551185368499e-7*v_comp + 59275.400298045803*exp(0.33333333333333298*v_comp) - 1.6534683782343201e-5)
        return val


    function tau_h_Na_Ta (v_comp real) real:
        val real
        val = (-0.677966101694915*exp(0.16666666666666699*v_comp) + 20296.319225490799*exp(0.33333333333333298*v_comp) + 5.6615934882188702e-6)/(898.11212572796705*v_comp*exp(0.33333333333333298*v_comp) - 2.5052551185368499e-7*v_comp + 59275.400298045803*exp(0.33333333333333298*v_comp) - 1.6534683782343201e-5)
        return val

    function m_inf_Na_Ta (v_comp real) real:
        val real
        val = 0.182*(v_comp + 38.0)*(563.03023683595097*exp(0.16666666666666699*v_comp) - 1.0)*exp(0.16666666666666699*v_comp)/((0.00177610354573438 - 1.0*exp(0.16666666666666699*v_comp))*(-0.124*v_comp - 4.7119999999999997) + (0.182*v_comp + 6.9159999999999995)*(563.03023683595097*exp(0.16666666666666699*v_comp) - 1.0)*exp(0.16666666666666699*v_comp))
        return val


    function tau_m_Na_Ta (v_comp real) real:
        val real
        val = (0.677966101694915*exp(0.16666666666666699*v_comp) - 190.85770740201701*exp(0.33333333333333298*v_comp) - 0.00060206899855402699)/(0.058000000000000003*v_comp*exp(0.16666666666666699*v_comp) - 102.471503104143*v_comp*exp(0.33333333333333298*v_comp) + 0.000220236839671063*v_comp + 2.2040000000000002*exp(0.16666666666666699*v_comp) - 3893.91711795744*exp(0.33333333333333298*v_comp) + 0.0083689999075003893)
        return val


    # functions NaTa_t
    function h_inf_NaTa_t (v_comp real) real:
        val real
        if v_comp >= -66.000006 and v_comp < -65.999994:
            val = -0.041666666666666699*v_comp - 2.25
        else:
            val = (1.0*exp(0.16666666666666699*v_comp) - 1.67017007902457e-5)/(59874.141715197802*exp(0.33333333333333298*v_comp) - 1.67017007902457e-5)
        return val


    function tau_h_NaTa_t (v_comp real) real:
        val real
        if v_comp >= -66.000006 and v_comp < -65.999994:
            val = 1.88140072945764
        else:
            val = (-45.153617506983302*exp(0.16666666666666699*v_comp) + 1351767.0467834801*exp(0.33333333333333298*v_comp) + 0.00037707110459941602)/(59874.141715197802*v_comp*exp(0.33333333333333298*v_comp) - 1.67017007902457e-5*v_comp + 3951693.3532030601*exp(0.33333333333333298*v_comp) - 0.00110231225215621)
        return val

    function m_inf_NaTa_t (v_comp real) real:
        val real
        if v_comp > -38.000006 and v_comp < -37.999994:
            val = (0.090999999999999998*v_comp + 4.5499999999999998)/(0.029000000000000001*v_comp + 2.9380000000000002)
        else:
            val = 0.182*(v_comp + 38.0)*(563.03023683595097*exp(0.16666666666666699*v_comp) - 1)*exp(0.16666666666666699*v_comp)/((0.124*v_comp + 4.7119999999999997)*(exp(0.16666666666666699*v_comp) - 0.00177610354573438) + (v_comp + 38.0)*(102.47150310414307*exp(0.16666666666666699*v_comp) - 0.182)*exp(0.16666666666666699*v_comp))
        return val


    function tau_m_NaTa_t (v_comp real) real:
        val real
        if v_comp > -38.000006 and v_comp < -37.999994:
            val = 0.33865213130237398/(0.029000000000000001*v_comp + 2.9380000000000002)
        else:
            val = 0.33865213130237398*(exp(0.16666666666666699*v_comp) - 0.00177610354573438)*(563.03023683595097*exp(0.16666666666666699*v_comp) - 1)/((0.124*v_comp + 4.7119999999999997)*(exp(0.16666666666666699*v_comp) - 0.00177610354573438) + (v_comp + 38.0)*(102.47150310414307*exp(0.16666666666666699*v_comp) - 0.182)*exp(0.16666666666666699*v_comp))
        return val


    # functions Kv3_1
    function m_inf_Kv3_1 (v_comp real) real:
        val real
        val = 1.0*exp(0.10309278350515499*v_comp)/(1.0*exp(0.10309278350515499*v_comp) + 6.8746109409659999)
        return val


    function tau_m_Kv3_1 (v_comp real) real:
        val real
        val = 4.0*exp(0.0226551880380607*v_comp)/(1.0*exp(0.0226551880380607*v_comp) + 0.348253173014273)
        return val


    # functions Ca_LVAst
    function h_inf_Ca_LVAst (v_comp real) real:
        val real
        val = 1.0/(1280165.59676428*exp(0.15625*v_comp) + 1)
        return val


    function tau_h_Ca_LVAst (v_comp real) real:
        val real
        val = (8568.1537495805605*exp((1.0/7.0)*v_comp) + 23.705649191166199)/(1265.03762380433*exp((1.0/7.0)*v_comp) + 1)
        return val

    function m_inf_Ca_LVAst (v_comp real) real:
        val real
        val = 1.0/(1 + 0.0012726338013398101*exp(-1.0/6.0*v_comp))
        return val


    function tau_m_Ca_LVAst (v_comp real) real:
        val real
        val = (1856.8857817932601*exp((1.0/5.0)*v_comp) + 8.4663032825593607)/(1096.6331584284601*exp((1.0/5.0)*v_comp) + 1)
        return val


    # functions Ca_HVA
    function h_inf_Ca_HVA (v_comp real) real:
        val real
        val = 0.000457*(exp(-1.0/28.0*v_comp - 15.0/28.0) + 1)*exp((1.0/28.0)*v_comp + 15.0/28.0)/((0.0064999999999999997*exp((1.0/50.0)*v_comp + 13.0/50.0) + 0.000457)*exp((1.0/28.0)*v_comp + 15.0/28.0) + 0.000457)
        return val


    function tau_h_Ca_HVA (v_comp real) real:
        val real
        val = 1.0/(0.000457*exp(-1.0/50.0*v_comp - 13.0/50.0) + 0.0064999999999999997/(exp(-1.0/28.0*v_comp - 15.0/28.0) + 1))
        return val

    function m_inf_Ca_HVA (v_comp real) real:
        val real
        val = (0.055*v_comp + 1.4850000000000001)*exp(0.32198142414860698*v_comp)/((0.055*v_comp + 1.4850000000000001)*exp(0.32198142414860698*v_comp) + 0.0114057221149848*exp(0.26315789473684198*v_comp) - 9.3615164426375399e-6)
        return val


    function tau_m_Ca_HVA (v_comp real) real:
        val real
        val = (1.0*exp(0.26315789473684198*v_comp) - 0.00082077367379820897)*exp((1.0/17.0)*v_comp)/((0.055*v_comp + 1.4850000000000001)*exp(0.32198142414860698*v_comp) + 0.0114057221149848*exp(0.26315789473684198*v_comp) - 9.3615164426375399e-6)
        return val



    internals:

        tp_AMPA real = (tau_r_AMPA * tau_d_AMPA) / (tau_d_AMPA - tau_r_AMPA) * ln( tau_d_AMPA / tau_r_AMPA )
        g_norm_AMPA real =  1. / ( -exp( -tp_AMPA / tau_r_AMPA ) + exp( -tp_AMPA / tau_d_AMPA ) )

        tp_GABA real = (tau_r_GABA * tau_d_GABA) / (tau_d_GABA - tau_r_GABA) * ln( tau_d_GABA / tau_r_GABA )
        g_norm_GABA real =  1. / ( -exp( -tp_GABA / tau_r_GABA ) + exp( -tp_GABA / tau_d_GABA ) )

        tp_NMDA real = (tau_r_NMDA * tau_d_NMDA) / (tau_d_NMDA - tau_r_NMDA) * ln( tau_d_NMDA / tau_r_NMDA )
        g_norm_NMDA real =  1. / ( -exp( -tp_NMDA / tau_r_NMDA ) + exp( -tp_NMDA / tau_d_NMDA ) )

        tp_AN_AMPA real = (tau_r_AN_AMPA * tau_d_AN_AMPA) / (tau_d_AN_AMPA - tau_r_AN_AMPA) * ln( tau_d_AN_AMPA / tau_r_AN_AMPA )
        g_norm_AN_AMPA real =  1. / ( -exp( -tp_AN_AMPA / tau_r_AN_AMPA ) + exp( -tp_AN_AMPA / tau_d_AN_AMPA ) )

        tp_AN_NMDA real = (tau_r_AN_NMDA * tau_d_AN_NMDA) / (tau_d_AN_NMDA - tau_r_AN_NMDA) * ln( tau_d_AN_NMDA / tau_r_AN_NMDA )
        g_norm_AN_NMDA real =  1. / ( -exp( -tp_AN_NMDA / tau_r_AN_NMDA ) + exp( -tp_AN_NMDA / tau_d_AN_NMDA ) )







    input:

        spikes_AMPA <- spike
        spikes_GABA <- spike
        spikes_NMDA <- spike
        spikes_AN <- spike







    output:
        spike

